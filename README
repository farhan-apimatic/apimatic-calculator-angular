# APIMATICCalculatorLib

This API SDK was automatically generated by [APIMATIC Code Generator](https://apimatic.io/).

## Configuration

The SDK might need to be configured with your API credentials. Set your configuration in the `Configuration.js` file.

## Requirements

The SDK relies on AngularJS framework being available. See the [AngularJS website](https://angularjs.org/) for how to include AngularJS in your project.
If you have any `Date` or `Datetime` fields in your models or any endpoint has `Date` or `Datetime` type response, you will need to download [angular-moment](https://cdnjs.cloudflare.com/ajax/libs/angular-moment/1.0.1/angular-moment.min.js) and [moment.js](https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js) and include them in your project.

## Usage

The following shows how import the controllers and use:

1. Add the folder `APIMATICCalculatorLib` into your to your scripts folder.
2. Import the reference to these files inside the appropriate html file such as `index.html`. The `Module.js` file should be imported before the other files. And after `Module.js`, the `Configuration.js` file should be imported.

    ```html
    <!-- Helper files -->
    <script src="scripts/APIMATICCalculatorLib/Module.js"></script>
    <script src="scripts/APIMATICCalculatorLib/ModelFactory.js"></script>
    <script src="scripts/APIMATICCalculatorLib/ObjectMapper.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Configuration.js"></script>
    <script src="scripts/APIMATICCalculatorLib/APIHelper.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Http/Client/HttpContext.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Http/Client/HttpClient.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Http/Request/HttpRequest.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Http/Response/HttpResponse.js"></script>

<!-- API Controllers -->
    <script src="scripts/APIMATICCalculatorLib/Controllers/BaseController.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Controllers/SimpleCalculator.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Controllers/API.js"></script>

    <!-- Models -->
    <script src="scripts/APIMATICCalculatorLib/Models/BaseModel.js.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Models/OperationType.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Models/NewRequest.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Models/DATA.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Models/New.js"></script>
    <script src="scripts/APIMATICCalculatorLib/Models/Advance.js"></script>
    ```

3. Inject the module into your main module e.g:

    ```js
    var myApp = angular.module('myApp', ['APIMATICCalculatorLib']);
    ```

4. To use a generated factory in your controller, injection could be as follows:

    ```js
    myApp.controller('PageCtrl', function($scope, SimpleCalculator) {
        ...
    }
    ```

5. You can call any of the controller functions. The value returned will be a promise. For example:

    ```js
    var response = SimpleCalculator.calculate();
    ```

6. The context of response can be obtained by using `getContext()` function like:

    ```js
    response.then(function(data) {
        console.log(data.getContext());
    }, function(err) {
        ...
    });
    ```
